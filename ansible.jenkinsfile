pipeline {
    agent any

    environment {
        ANSIBLE_DIR = '/etc/ansible/Ansible_Roles'
        GIT_USER = 'elvizhuy'
        GIT_DIR = 'Ansible_Roles'
        PLAYBOOK_REPO = 'https://github.com/${GIT_USER}/${GIT_DIR}.git'
        INVENTORY_HAPROXY_FILE = "${ANISBLE_DIR}/haproxy/inventory/inventory.yml"
        INVENTORY_KEEPALIVED_FILE = "${ANISBLE_DIR}/keepalived/inventory/inventory.yml"
        ANSIBLE_SERVER = 'isofh@10.0.50.30'
        GIT_CONFIG = 'git config --global --add safe.directory'
        GIT_PULL = 'git pull'
        GIT_CHECKOUT = 'git checkout'
        GIT_BRANCH = 'git branch'
    }

    parameters {
        choice(choices: ["Haproxy","Keepalived"], description: 'Choose Role', name: 'role')
        choice(choices: ["bvp","dhy"], description: 'Choose Project', name: 'project')
        choice(choices: ["update-config","install", "clear"], description: 'Choose Action', name: 'action')
    }

    stages {
        stage('Choose Ansible Roles') {
            when { expression { params.role != null && params.project != '' }}
            steps {
               script {
                    echo "------------ CHECKOUT ANSIBLE ROLES ------------"
                    sh 'pwd'
                    // checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: env.PLAYBOOK_REPO]]])
                    sshagent(credentials: ['ansible-server-ssh']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no ${ANSIBLE_SERVER} "
                        cd ${ANSIBLE_DIR} && 
                        ${GIT_CONFIG} ${ANSIBLE_DIR} && 
                        ${GIT_PULL} && 
                        ${GIT_CHECKOUT} ${params.project} && 
                        ${GIT_PULL} &&
                        echo '.........Show Git Branch ...........' &&
                        ${GIT_BRANCH} &&
                        echo '....................................'
                        "
                        """
                    }
                    
                    echo "------------------- DONE ---------------------"
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    def inventoryFile = "${ANSIBLE_DIR}/${params.role.toLowerCase()}/inventory/inventory.yml"
                    def playbookFile = "${ANSIBLE_DIR}/${params.role.toLowerCase()}/${params.role.toLowerCase()}-playbook.yml"
                    
                    if (params.action == 'clear') {
                        playbookFile = "${ANSIBLE_DIR}/${params.role.toLowerCase()}/clear-playbook.yml"
                    } else if (params.action == 'update-config') {
                        playbookFile = "${ANSIBLE_DIR}/${params.role.toLowerCase()}/update-config-playbook.yml"
                    }
                    
                    echo "Running playbook for role: ${params.role}, project: ${params.project}, action: ${params.action}"
                    
                    // ansiColor('xterm') {
                        sshagent(credentials: ['ansible-server-ssh']) {
                            sh """
                            ssh -o StrictHostKeyChecking=no ${ANSIBLE_SERVER} "
                            cd ${ANSIBLE_DIR}/${params.role.toLowerCase()} &&
                            ${GIT_CHECKOUT} ${params.project} && 
                            ansible-playbook -i ${inventoryFile} ${playbookFile} --extra-vars 'project=${params.project} action=${params.action} role=${params.role}'"
                            """
                        }
                    // }
                }
            }
        }
    }
}

